[{"content":"Preface: I wrote this article for recompiling what I variously gained\nSlow/ Fast Index method ","permalink":"https://flappyhimself.netlify.app/en/posts/classes/lc/day1/","summary":"Preface: I wrote this article for recompiling what I variously gained Slow/ Fast Index method","title":"LeetCode day1"},{"content":"Who am I? I am currently a sophomore in New York University, majored in computer science (planned to be an honored track). I am a traveller who\u0026rsquo;ve been to America, China, Australia, Swizerland, and Greece.\nHuge fan of Computer games/ Computers I always dream of becoming a game designer some day. I played my first game when I was 6. (The House of the Dead III)\nLater on I played huge amount of games on tablet including various kind, like Final fantasy series, gameloft games\u0026hellip; I played computer games as well, including MMORPG games like Final fantasy 14 (it is now my favorite), FPS like Overwatch and Rainbow 6 Siege, Fighting game like Street Fighter 6. Games brings me so much and solidified my personlity. I enpowered me every moment when I got to depression \u0026ndash; That can also be said: \u0026ldquo;I cannot be the real myself without games.\u0026rdquo;\nCoding. Coding is the biggest hobby I found in my college life. The profound feeling of connecting the logics using spells are crazy. By being able to see the most intelligent hackers solving the most important problems are thrilling, and I am trying to pursue my career to become a hacker. I loved this feeling so much, which is completely another experience other than what games brings to me. Other than gaining insights and laying up building blocks of logics, there is growth of coding ability, and feelings of huge achievement. Other than computers. UFC. After one year\u0026rsquo;s training of boxing last year, I became a fan of UFC(Ultimate Fighter championship). Stylebender, Weili Zhang, Covington, Oliveria and Makhachev are all my favorite fighters. Philosophy. I am a fan of philosophy, especially interested in problems related to value and metaphysics.\n","permalink":"https://flappyhimself.netlify.app/en/posts/about/","summary":"Who am I? I am currently a sophomore in New York University, majored in computer science (planned to be an honored track). I am a traveller who\u0026rsquo;ve been to America, China, Australia, Swizerland, and Greece. Huge fan of Computer games/ Computers I always dream of becoming a game designer some day. I played my first game when I was 6. (The House of the Dead III) Later on I played","title":"About "},{"content":"I chose the book HARLEY HAHN\u0026rsquo;S GUIDE TO UNIX AND LINUX as my unix book. Below is my insights or inspirations. ","permalink":"https://flappyhimself.netlify.app/en/posts/classes/njupa/nju-unix/pic/","summary":"I chose the book HARLEY HAHN\u0026rsquo;S GUIDE TO UNIX AND LINUX as my unix book. Below is my insights or inspirations.","title":"NJU PA - Unix introduction. "},{"content":"这篇文章会浅浅总结多巴胺的来源和目的，以及它如何优化我们的生活。\n资源 【快感上瘾?】如何欺骗大脑做困难的事! 多巴胺 动力、专注力\u0026amp;满足感【Huberman Lab Ep. 39】\n引子。 大多数人步入成年之后，最重要的事情就是脱离了父母的管教，成为了自由之身。在这个物欲横流的年代，很多人常常陷入存在主义危机又或是因为失控的奖励系统的危机让自己陷入了财力危机，或是陷入抑郁症的风险。这个时候培养一个严肃地对待周围娱乐的自控系统就相当重要，这是度过众多sustainable，happy的生活的关键。\n但是人本质是一个化学物质组成的生物，我们人为的意志可以利用一些造物主的设计来过上幸福和有意义感的人生，这其中关键的一步就是调理好 多巴胺的水平。\n最终目的：尽可能地提高多巴胺基准线的水平，并且依旧获得高峰的感觉。\n一些多巴胺的机制。 多巴胺主要作用是：唤醒你对某样事物的 渴望程度。而肾上腺素几乎是 能量的代名词。 仅仅总结一下Huberman说的结论。\n感性层面上多巴胺释放的程度取决于自己的期望。期望越高，多巴胺释放越多。 你如果喜欢游泳，那么游泳者除了客观游泳这项活动之外，多巴胺回路会再次被强化。（但是这种强化是可持续性的） 每个人都客观的存在一个多巴胺基准线。这个基准线决定了一个人对生活的渴望程度。\n多巴胺是肾上腺素的原料。肾上腺素会随着多巴胺的增加减少增加减少。\n基准线和最高点的互动规则： a. 基准线会下降到和最高量的长度成正比关系。也就是升得越多，降得越多。（中期内，长期依旧会回复到原来的基准线） 为什么？ （原因是：多巴胺存在一个叫做多巴胺池的地方，而它剩余的量和释放出来的量必须形成一个稳定的状态，否则就是缺乏的状态）\n一些造物主的规则。造物主制定了这些规则导致了多巴胺系统和我们行为的互动。\n物质层面上与生活息息相关的几种典型的行为会短暂提升多巴胺基准线水平。 咖啡因。 TODO 多巴胺从何而来？ 从远古时期人类的多巴胺系统是一个很好的适应狩猎生存的系统，据研究发现大多数哺乳动物都有多巴胺系统。在Hurberman教授的播客中，Huberman说这种机制是为了更好地让人类的种族存活下来的设计。多巴胺的提升能让人注意到能量丰富的果子，吃完之后就会有“愉悦”的感觉，人们会记住这种感觉，同时也会陷入更加饥饿的时候，多巴胺基准线又下降了，这样吃一个果子后，人又会觉得非常好。这一切都是造物主根据文明史前的环境设计出的我们的人体。\nbtw，生物系统真的是如果背后真的有一个设计者的至高意志存在的话，那真的是非常的精妙。\n那么如何优化？ 这是重头戏。有用的知识才是我写这个博客的最大的目的。\n**多洗冷水澡。**这个是0成本提升自己多巴胺水平的最好方法。\n","permalink":"https://flappyhimself.netlify.app/en/posts/thoughts/common_nerural_sci/dopamine/","summary":"这篇文章会浅浅总结多巴胺的来源和目的，以及它如何优化我们的生活。 资源 【快感上瘾?】如何欺骗大脑做困难的事! 多巴胺 动力、专注力\u0026amp;满足感","title":"如何管理多巴胺，迎接sustainable人生"},{"content":"Introduction (FAQ) Recently I found an amazing course that introduces computer system, NJU PA.\nPA focus more on the abstraction of computer system, but it is not a typical system class that focues too much on hardware. It focus more on a symplified version of OS. And it is very tough. It also includes friendly words from those skilled system programmer.\nWhy is this course so amazing? (why should I take this course? )\nIt is hard. After grinding, solving a hard problem on my own is gained. Since every serious engineering problem starts with a blank piece of paper. A handout? The framework code? It doesn\u0026rsquo;t exist. If we don\u0026rsquo;t provide handouts and framework code for you to write a NEMU that can run a sword, it will be very similar to the task you will face after graduation. So we design PA to beat you now, let you suffer, suffer, in the final analysis is to make you more competitive in the future job hunting, to withstand the beating of society. 我将来不从事系统相关的工作, 就不会那么痛苦了? ans: 就算是应用程序, 几千个模块之间通过几万个API交互的场景都是家常便饭, 复杂性是社会毒打你的第二招必杀技.\nBuilding up your own knowledge system. Everything will only work when you fully understand. If you don\u0026rsquo;t know what you are talking about, your understanding of the knowledge is not clear enough, then you should read a book/manual\nDo not know what to do/how to do, indicating that your system view is fragmentary, can not understand the relationship between various modules in the system, at this time you should RTFSC, try your best to sort out and understand all the details of the system\nIf you don\u0026rsquo;t find bugs, you don\u0026rsquo;t know the correct expected behavior of the program. You need RTFSC to understand how the program should work. It also shows that you don\u0026rsquo;t pay attention to the use of tools and methods, and you need to take the time to experience and summarize them\nbtw pa is designed for upper goals, it does not intend to welcome students finishing this in a term.\nWhat knowledge is included other than solid debugging skills and engineering skills? 确实, 对于大部分计算机本科专业学生来说, 硬件设计能力不如电子工程专业学生, 行业软件开发和应用能力不如其他相关专业学生, 算法设计和分析基础又不如数学系学生. 那么, 计算机专业学生的特长在哪里? 我们认为计算机专业学生的优势之一在于计算机系统能力, 即具备计算机系统层面的认知与设计能力, 能从计算机系统的高度考虑和解决问题.\n随着大规模数据中心(WSC)的建立和个人移动设备(PMD)的大量普及使用, 计算机发展进入了后PC时代, 呈现出\u0026quot;人与信息世界及物理世界融合\u0026quot;的趋势和网络化, 服务化, 普适化和智能化的鲜明特征. 后PC时代WSC, PMD和PC等共存, 使得原先基于PC而建立起来的专业教学内容, 已经远远不能反映现代社会对计算机专业人才的培养要求, 原先计算机专业人才培养强调\u0026quot;程序\u0026quot;设计也变为更强调\u0026quot;系统\u0026quot;设计.\n后PC时代, 并行成为重要主题, 培养具有系统观的, 能够进行软, 硬件协同设计的软硬件贯通人才是关键. 而且, 后PC时代对于大量从事应用开发的应用程序员的要求也变得更高. 首先, 后PC时代的应用问题更复杂, 应用领域更广泛. 其次, 要能够编写出各类不同平台所适合的高效程序, 应用开发人员必需对计算机系统具有全面的认识, 必需了解不同系统平台的底层结构, 并掌握并行程序设计技术和工具.\nAbilities:\n能够对软, 硬件功能进行合理划分 能够对系统不同层次进行抽象和封装 能够对系统的整体性能进行分析和调优 能够对系统各层面的错误进行调试和修正 能够根据系统实现机理对用户程序进行准确的性能评估和优化 能够根据不同的应用要求合理构建系统框架等 So we should learn:\n对计算机系统整机概念的认识。 对计算机系统层次结构的深刻理解。 对高级语言程序, ISA, OS, 编译器, 链接器等之间关系的深入掌握。 对指令在硬件上执行过程的理解和认识。 对构成计算机硬件的基本电路特性和设计方法等的基本了解等。从而能够更深刻地理解时空开销和权衡, 抽象和建模, 分而治之, 缓存和局部性, 吞吐率和时延, 并发和并行, 远程过程调用(RPC), 权限 和保护等重要的核心概念, 掌握现代计算机系统中最核心的技术和实现方法. Always remember, there are only 3 fundamental question in cs education:\n(theory, 理论计算机科学) What is computing? (system, 计算机系统) What is a computer? (application, 计算机应用) What can a computer do? Learning how to practice will enhance your understanding, bringing up new ideas, and bringing up more practices.\n学汽车制造专业是要学发动机怎么设计, 学开车怎么开得过司机呢?\nChicken soup 少抱怨, 多吃苦吧。当你遇到了问题，那么就是你没有掌握好。 程序设计实验对菜鸡友好, 但为什么你做完之后还是菜鸡? 做一个对菜鸡友好的实验, 能力并不会得到提升.\nappropriate mindset. (from the FAQ section of PA.)\nRead the fucking manual. Understand every detail about the code you write. Understand the relationship between modules of computer systems. Undetstand the typical tools for solving typical questions. 这种\u0026quot;只要不影响我现在survive, 就不要紧\u0026quot;的想法其实非常的利己和短视: 你在专业上的技不如人, 迟早有一天会找上来, 会影响到你个人职业生涯的长远的发展; 更严重的是, 这些以得过且过的态度来对待自己专业的学生, 他们的survive其实是以透支南大教育的信誉为代价的 \u0026ndash; 如果我们一定比例的毕业生都是这种情况, 那么过不了多久, 不但那些混到毕业的学生也没那么容易survive了, 而且那些真正自己刻苦努力的学生, 他们的前途也会受到影响. \u0026ndash; etone\nHow to ask the right question? ","permalink":"https://flappyhimself.netlify.app/en/posts/classes/njupa/nju-pre/","summary":"Introduction (FAQ) Recently I found an amazing course that introduces computer system, NJU PA. PA focus more on the abstraction of computer system, but it is not a typical system class that focues too much on hardware. It focus more on a symplified version of OS. And it is very tough. It also includes friendly words from those skilled system programmer. Why is this course so amazing? (why should I","title":"NJU PA Mindset"},{"content":"原文po在了flappyhimself.netlify.app上，用了外网博客同步服务的原因搞个梯子才能上\n喜欢（做过的事）。 计算机学习。 从去年暑假开始接触cs61a开始，一年过去了，我就是计算机零基础到现在能够手搓红黑树，也能够实现基本shell，2048这种简单游戏的这个样子，也挺满意了吧。\n总结去年的fall和spring学了数据结构，离散和算法，老师都挺负责任的（尤其是算法老头子），但是NYU的cs是真的水并且相当理论，算法和离散的课程就完全没有实操的空间，没有实操没有跑分，只有一成不变的伪代码标准答案。不要来学，但是好拿课好拿分那是肯定的。\n未来的课程：没有啥大计划，之后反正找工作跟我上的课几乎没有关系，除了几门硬课os和分布式系统可以搞一点项目，之后可以混一点研究生课搞点科研试一试。\n文科全部放到大四上。这些通识教育算是完完全全把我拍醒了，说着社会主义的话，像资本主义的生活就是你们了吧，更何况给我带来的批判性思维的提升还不如我豆瓣上写一篇书评。\n原本我喜欢哲学是因为太过于热血，以为研究哲学就能掌握时间真理的感觉，其实只是当今经济周期衰退 + 内卷的组合拳把我打拧巴了，在这里无病呻吟罢了。除这个原因之外大概会多选几门哲学课，也就提升一下口语水平。\n总的来说就是，在NYU上学能自学搞懂的就不要上课，多选难课混科研，多选grad cs混项目，多选prob点一个概率学的技能树，在学一点哲学点一下辩论和口语的技能树，感觉我的大学的学术生涯就是这样了。\n然后在空闲时间自学了cs61b和algorithm的前半部分，嗯，总的来说就是很爽，有美感，也有实践。\n暑假： 暑假初期搞了好多爱好上的事情，复刻了一下doom，尝试了一下汇编语言写点婴幼儿程序，但是耍完之后我发现还是找一件事情开始专注的做比较好，就像当时开始翻阅csapp的动机一样。学完csapp之后感觉整个人都想起飞，有很多感兴趣的地方，每一章我都想深入去了解，但是又抱着对未来没啥用的一种焦虑感，但是直到最后总还是找到兴趣点一头扎进去了。\n回顾整个暑假基本上用来彻底放松了，每天不是吃就是睡觉，纯纯地当了一个懒狗。\nlab做到shell lab就没心思继续做下去了，接下来像做一些unix网络编程的事情。\n虽然看完csapp懂了一些皮毛，但是总的来说计算机系统对我来说还是像一个黑盒。\n游戏 过去的一年里因为发病把我所有的游戏都删光了，把好友都删光了，但是我发现好像没了游戏，我这个人的底色都没有了。\n想起来从小到大陪伴我最久的不是哪个身边的朋友，可能是gameloft手游，可能是4399，可能是一些垃圾页游，可能是彩虹六号和守望先锋。。。\n这一年过去了，虽然我逼着我自己只用cpu和内存稍微好一点的电脑，拿的是集显玩的ff14。\n也许另外一个时间线里我正在读游戏设计，和彦祖（我的一个朋友）成为了同学？\nnpy 这里就不爆了啊，反正没有，不知道未来会不会想要有。\n坚定。（目前确定的态度） 我也不知道我是什么时候这么开始热衷于一些鸡血一般的东西（明知道没什么用。。。）\n实事求是，不讲虚的，给我来钱。这都是什么时代了，还讲什么新思想。赚钱嘛，不含糊。\n“难道留学经历中刷题和学习是最重要的吗在这天天学习？”。这句话是没错的，和我价值观相符，但是市场是残酷的，没有需求没有政策推动那就是硬生生等死。爱好和主业大部分时间就还得是分开来，为了赚钱就还是好好刷题搞实习，写论文，写repo进大厂，在NYC摸鱼和闲逛就彻底放松。学都学了还分啥心。\n专注于一件事情能收获成就感。 暑假初期搞了好多爱好上的事情，复刻了一下doom，尝试了一下汇编语言写点婴幼儿程序，但是耍完之后我发现还是找一件事情开始专注的做比较好，就像当时开始翻阅csapp的动机一样。学完csapp之后感觉整个人都想起飞，有很多感兴趣的地方，每一章我都想深入去了解，但是又抱着对未来没啥用的一种焦虑感，但是直到最后总还是找到兴趣点一头扎进去了。\n高中班主任经常提一句话“办法总比困难多。”\n我们高中时期常常各种隐喻笑话我们班主任，但是他在对待我们的心态上绝对是一个合格的班主任。要我说在天一这段实践学到最棒的东西，那一定是实事求是的精神。彦祖就是很讲究实事求是精神的人（大雾），我从他身上学到了很多东西。回想起以前肝各类学科的时光，这么说我还是很怀念高中的啊。\n踌躇 我们从小就被教育要做成功的事情，假设成功这个目标一定是对的，我们现在应该做什么呢？\n而出了国之后就会发现意识形态不再统一，周围的同学并不会把搞钱放在第一位，大多数人会追随自己内心的声音，更何况高中之后就很少有确定的通往成功的道路了，大部分人大多时候都很迷茫。\n除了不断地学习实践和试错，互联网上有很多整理的repo，在我看来这些都是难能可贵的隔空和有智慧的前辈谈话，有指导性的建议。\nrepo： 一位thu学长记录的访谈 n+e的博客\n大未来 政治上的事情谁都说不准，未来十年真的是一点预判都没有，毕竟最近科技树长的太快了，没准就赛博朋克了呢（笑\n个人未来\n异化：针对THU这种GPA为主的评价方式，我的观察是，不少人就失去了自我，被推着走（我也确实有段时间这样）。即使是有了GPA，之后如果没想清楚自己想干什么，或者是其他能力并不能匹配这个GPA，都是很致命的问题。再加上没有校内的论坛，每个年级之间的信息交流不通畅，自己也缺乏职业规划，结果就是一路跑着跑着，跑到终点就不知道该干啥了。真是十分悲哀的一件事。\n尤其是今年真正到了国外之后认识到了不能用他人的眼光看待自己。\n但是对我来说去美国学cs最重要的因素无非是为了更好的经济条件这无可厚非。毕竟想多了也没什么用，也不多说屁话了，放弃自己心里所谓的“反卷文艺情怀了”，（毕竟再不找工作我得饿死\n整体来讲我觉得我个人工作状态突然从高中的紧绷变成了更放松的专注，我想这也是更加sustainable的。\n总的来说，我认为发生什么都是可能的。\n最近也心血来潮想稍微找找工作经验帖子看看，迟早要面对的不如早点看一看心里有个数，\n他写的相当好啊，膜。 找工回忆录 其中有好多事情是我现在正在迷茫的，有我现在看了相当赞同的，我po一下： 好吧，就目前来看这种帖子对我这种弱鸡来讲还是没什么参考价值，毕竟自己也只是浅浅地接触了计算机领域，实践太少，连热爱都不知道是什么。\n但是不可变的未来，最高概率得分的行为我觉得还是：\n多多社交积累人脉，善待身边的人。 多多尝试干一些以前没干过的事情。 多多准备成为一个普通人：卷，把一些我觉得有趣的项目搞了，刷题，刷paper，试试看能不能升到更好的cs的学校（这意味着更好的成长空间），学习些分布式和数据库找工作攒劲，找个普通实习先干起来，当然尽量都是自己感兴趣的。（乐 卷开源，卷开源，卷开源喵 毕竟现在还是一个学生，其他的事情收益不确定风险大，再说这些这些对我基本都是无痛的事情，我也乐此不疲。 ","permalink":"https://flappyhimself.netlify.app/en/posts/life/nyu-first-year/","summary":"原文po在了flappyhimself.netlify.app上，用了外网博客同步服务的原因搞个梯子才能上 喜欢（做过的事）。 计算机学习。 从去","title":"NYU 第一年"},{"content":"preword: I built this static website for compiling notes of knowledge. I dont want to focus too much on \u0026ldquo;deeper magic\u0026rdquo; on website-building technology but just write notes about computer science and other types of knowledge. (/smile)\nprecondition: Installed hugo, git\nResources Getting Started With Hugo | FREE COURSE\npaperMod theme\npreknowledge recap quick github recap.\ngit remote add \u0026lt;github remote repo name\u0026gt; \u0026lt;repo url (better ssh since it caused several error using http)\u0026gt; git remote remove \u0026lt;github remote repo name\u0026gt; buildup this website set up your blog directories. hugo new site \u0026lt;sitename\u0026gt; -f yml will create static website.\nloading theme. Here I am using papermod theme, so I clone their repo into my ./themes/ folder/ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1\nAdd in config.yml: theme: \u0026quot;PaperMod\u0026quot; and theme is automatically set.\nsetup of configuration file. (config.yml) You can find them in github pages of your own theme\u0026rsquo;s developer. Below is my .yml file.\nbaseURL: \u0026#34;https://flappyhimself.netlify.app/\u0026#34; languageCode: en-us title: FlappyHimself theme: PaperMod enableInlineShortcodes: true enableEmoji: true enableRobotsTXT: true hasCJKLanguage: true buildDrafts: false buildFuture: false buildExpired: false paginate: 15 minify: disableXML: true permalinks: post: \u0026#34;/:title/\u0026#34; defaultContentLanguage: en defaultContentLanguageInSubdir: true languages: en: languageName: \u0026#34;English\u0026#34; # contentDir: content/english weight: 1 profileMode: enabled: true title: This is my note compilation. subtitle: \u0026#34;learn and practice\u0026#34; imageUrl: \u0026#34;http://p0.itc.cn/q_70/images03/20200905/3c619b233f9f44f6865c919f49b75478.jpeg\u0026#34; imageWidth: 100 imageHeight: 100 buttons: - name: tech url: posts/tech - name: life url: posts/life - name: class url: posts/classes menu: main: - identifier: search name: search url: search weight: 1 - identifier: tags name: tags url: tags weight: 3 outputs: home: - HTML - RSS - JSON params: env: production author: Flappy defaultTheme: auto # disableThemeToggle: false ShowShareButtons: true ShowReadingTime: true displayFullLangName: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true hideFooter: false ShowWordCounts: true VisitCount: true ShowLastMod: true ShowToc: true TocOpen: true comments: true socialIcons: - name: github url: \u0026#34;https://github.com/FlappyBob\u0026#34; - name: twitter url: \u0026#34;https://twitter.com/FlappyHimself\u0026#34; fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] Content structure, and its relationship with config file\n. ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ────│tech │ │ │ └── first/ │ └── pic/ │ └── index.md/ │ └── second/ │ └── pic/ │ └── index.md/ ├── static/ ────│tech │ │ │ └── first/ │ └── background picture1/ │ └── second/ │ └── background picture12/ └── themes/ └── PaperMod/ content is the mother folder that contains all real data that shows up in one blog. pic (sub folder) that holds picture references in one blog. The directories\u0026rsquo; names are named as the blog name. I usually manage my file strucuture like this:\nI will split several categories in my posts. Accordingly, life/ tech/ classes. (I will split subfolder even further, like MIT6.s081/ CSAPP notes in subfolder classes. ) Then create _index.md file for each folder that is a mother folder, except the folder that holds the article. In an article folder, there is one index markdown file that contains the artiocle and there is another pic folder that contains the pictures. I use the static folder to contains cover pictures. Below is the example frame that I use. How a typical content is made of.\n--- title: \u0026#34;How to build up site using hugo\u0026#34; date: 2023-08-22T23:51:11-04:00 showToc: true # show the directoreis of the article. TocOpen: true cover: image: tech/first/hello.png caption: \u0026#39;game(ff14) -- my avatar on behalf of thinking hard\u0026#39; tags: - \u0026#34;blog\u0026#34; --- Connect to a real website. netlify service setup Netlify is a service that builds up webpage using your existing github repository, and it automatically renews as you push contents to your github repo.\nwrite config as following write environment variable of your hugo version like below. add a domain name.\nworkflow Here the workflow becomes smooth as silk.\ncreate markdown flie and find a comfortable text editor hugo new posts/\u0026lt;file name.md\u0026gt; write a script that upload your recent change, mostly I don\u0026rsquo;t care about the commit message when writing my own blog. (I am windows, so create a .bat file) git add ./ git commit -m \u0026#34;finish setting\u0026#34; git push blog main run the script and see changes on your website (usually take a few seconds) ","permalink":"https://flappyhimself.netlify.app/en/posts/tech/veryfirstblog/","summary":"preword: I built this static website for compiling notes of knowledge. I dont want to focus too much on \u0026ldquo;deeper magic\u0026rdquo; on website-building technology but just write notes about computer science and other types of knowledge. (/smile) precondition: Installed hugo, git Resources Getting Started With Hugo | FREE COURSE paperMod theme preknowledge recap quick github recap. git remote add \u0026lt;github remote repo name\u0026gt; \u0026lt;repo url (better ssh since it caused","title":"Build up static site and deploy it using hugo and netlify"},{"content":"","permalink":"https://flappyhimself.netlify.app/en/en/posts/about/","summary":"About","title":"About"}]